<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1191px" height="474px" viewBox="-0.5 -0.5 1191 474" content="&lt;mxfile&gt;&lt;diagram id=&quot;oGozT7ml_9ITFYytoBWH&quot; name=&quot;Page-1&quot;&gt;7VrbbuM2EP0aAclDAl1sx370ZbNbNCmCTYG2TwEt0RIRSlQpOrHz9R1KpK60rSQ2kLYGgl1zOCSHM2eGcxJb3jzefOcoje5ZgKnl2sHG8haW6zo3Qw/+k5JtIbkZTgpByEmglCrBI3nDSmgr6ZoEOGsoCsaoIGlT6LMkwb4oZGot4py9NtVWjDZPTVGIG4uk4NFHFHfU/iCBiJTUsWvqPzAJI3X0eKgmlsh/DjlbJ+q8hCW4mImR3kapZhEK2GtN5H2zvDlnTBSf4s0cU+lW7bFi3e2O2dJkjhPRZ4FbLHhBdK1ubbkjCktnqbRObJUzRn+vpUmzGPGQJJY3tdNNObwSLAXRIBcJvBFXiJJQavlgBuYgrXaAT6H6Pz+H1AQohn1mtDv6RW6zQj4uxc0ljR3htqR9ypJ3JFpwfzelIeNERHFth2VbH2RpWxZx6SQNXH1DZ/dl3+NUilei9Kppy5kENREXMD+Fj0kAoEdby53DYNuQXRaj33IcVg4xmJKiICBJWOjb6mi7NLAmNNuTchwQv23TZcvCXTFp+thtWOi+YC4IZOe0wNYiB91MIW1ReGvGQGtF84xaEUC6N1uxRKja4rhqfItiQmVV+oHpC5a7ymCKmEql8ux6FqnEkjbgTU2ksuo7ZjEWHK5mq9mBSnBV+3S+v1aFxNV1JKrVkImuX6p2heXGVRLDB5XHO3J60PEdDqCyqWFejRrXDVAW4UANcBJMZfGE4ZIy/7kQ3ebOXNj7nJOxNffVgcoEee5eb3FMkSAvzYprurxa+sAInFp62Wm52XFa/hOAXCzUqpYLSzN6eXXQqZR3LCQZgOcnDjnOMsKSjt+zVxJTlPs7x6GacWrALUukGd9+RGhwh7ZsLZ2dCXha9GgWQdV6g22RDiRMcw12d9TQeJQrVQTBWtB50BF0WqJ7tGko3qFMKIHPKEVpRpblNYrSMGNCsFivYgJiypJDeOmfTFfOsJlNw246eY4hnco0/Ew+DTuRv5I70jRCRV2DgoMAXiMrN8KbyWkMXqIs2a0gIiz2rF+SbM9sjDZPJIeN1MjB3ZgPZUdWTC6hZergUj7SOV44e8ZzRhmvCoOsmy1Rq8iakZqlyIen4y7XWQwqyU8Vj0GzPkckCHCi8YIKSMkLpDJb83gNZ/ADEZzb10NruJBP21A+r3oMP1KdizlL4C6I5AjDgNdXLDF7GIqD3lDU0Bv1Q95k8HngjQzNWSuQlOQBKgKpu1TnQ1GMIR4UV2H7XUZ1ceV0Qut1Q+sZwkjREtMHlhEVAF7otsJ7KIJNiJIkwtCpHSeUjuFRNsZy/PlQ3hhrSIbDmJHg4q2W6Ze7s95ncboW+AmyOyBw7x6dXyGr1Zq6vNzcmrvW1P76/y6JjEHNPfJycVkElesuapPKpWY/+iz7tA/t/6wb2wj8OOFo7tCPIpwfrCM9WI4uX4eqnOO4R+Aeo3dyD7gY3/4pr3vtDF0t+EvOXtuepwUL3ZIWo2199ABPAhgqu6FceAI6o1xYsAmr/puT4zGcvi4ed4kINAGIn2nIyWnIwG2xehMPcU/FQyan5iHV72fOTOTYhb0Lv3Fv+O2hHiawHYN66AfizD16cY93x9LIPUzBPAL3cJxOLI/dBf9PWuAzCTsOCTtTiX/Hi2PkDqYqdRzucPNx7jAej1vcwf4q3EG75kuQB21M7S349R6jJDtzhtNwBm/cgzJMTkUZHM/49D/v6tYPdfP5fCKboHL+XF01NNze2NjT0JugMDpGQ9/9++W5od/d0L8/mJOeeX2Mht78F0mZmE+yJnNGguzQVzCqtM67uhVJgiefsgw8tXOToj8rZ00HXDRUDb9+z08rucfeg0jwvjtkACKKn7p9pdG2/YbKBlM5Zsdu3Y703I6euGBODO2oKcecwfvbURhWX7srvh9Sfa3R+/YP&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-409-261-302-94-0"><rect x="409" y="261" width="302" height="94"/></clipPath><clipPath id="mx-clip-409-363-302-112-0"><rect x="409" y="363" width="302" height="112"/></clipPath><clipPath id="mx-clip-4-261-312-94-0"><rect x="4" y="261" width="312" height="94"/></clipPath><clipPath id="mx-clip-4-363-312-112-0"><rect x="4" y="363" width="312" height="112"/></clipPath><clipPath id="mx-clip-804-261-382-64-0"><rect x="804" y="261" width="382" height="64"/></clipPath><clipPath id="mx-clip-804-333-382-142-0"><rect x="804" y="333" width="382" height="142"/></clipPath></defs><g><rect x="460" y="0" width="200" height="90" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 90px; padding-top: 0px; margin-left: 460px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 90px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;Interface&gt;&gt;</i><br /><b>MLAlgorithm</b></p><hr size="1" /><p style="margin:0px;margin-left:4px;">+ fit(x: ndarray, y: ndarray): None<br style="padding: 0px; margin: 0px;" />+ predict(x: ndarray): ndarray<br /></p></div></div></div></foreignObject><text x="460" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">&lt;&lt;Interface&gt;&gt;...</text></switch></g><path d="M 560 230 L 560 98.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 560 91.12 L 563.5 98.12 L 556.5 98.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 405 256 L 405 230 L 715 230 L 715 256" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 405 256 L 405 470 L 715 470 L 715 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 405 256 L 715 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="559.5" y="247.5">LogisticRegression</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-409-261-302-94-0)" font-size="12px"><text x="410.5" y="273.5">- alpha: float</text><text x="410.5" y="287.5">- epsilon: float</text><text x="410.5" y="301.5">- theta: float</text><text x="410.5" y="315.5">- bisa: float</text><text x="410.5" y="329.5">- max_iter: int</text><text x="410.5" y="343.5">- graph: bool</text></g><path d="M 405 354 L 715 354" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-409-363-302-112-0)" font-size="12px"><text x="410.5" y="375.5">- segmoid(z: float): float</text><text x="410.5" y="389.5">- compute_gradient(x: ndarray, y: ndarray, theta: ndarray,</text><text x="410.5" y="403.5">                            bias: float, m: int): (float, float)</text><text x="410.5" y="417.5">- compute_cost(x: ndarray, y: ndarray, theta: ndarray, </text><text x="410.5" y="431.5">                            bias: float, m: int): float</text><text x="410.5" y="445.5">+ fit(x: ndarray, y: ndarray): None</text><text x="410.5" y="459.5">+ predict(x: ndarray): ndarray</text></g><path d="M 314.25 230 L 483.99 97.95" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 489.52 93.66 L 486.14 100.72 L 481.84 95.19 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 256 L 0 230 L 320 230 L 320 256" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 256 L 0 470 L 320 470 L 320 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 256 L 320 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="159.5" y="247.5">LinearRegression</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-261-312-94-0)" font-size="12px"><text x="5.5" y="273.5">- alpha: float</text><text x="5.5" y="287.5">- epsilon: float</text><text x="5.5" y="301.5">- theta: ndarray</text><text x="5.5" y="315.5">- bisa: float</text><text x="5.5" y="329.5">- max_iter: int</text><text x="5.5" y="343.5">- graph: bool</text></g><path d="M 0 354 L 320 354" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-363-312-112-0)" font-size="12px"><text x="5.5" y="375.5">- compute_cost(x: ndarray, y: ndarray, theta: ndarray,</text><text x="5.5" y="389.5">                            bias: float, m: int): float</text><text x="5.5" y="403.5">- compute_gradient(x: ndarray, y: ndarray, theta: ndarray,</text><text x="5.5" y="417.5">                            bias: float, m: int): (float, float)</text><text x="5.5" y="431.5">+ fit(x: ndarray, y: ndarray): None</text><text x="5.5" y="445.5">+ predict(x: ndarray): ndarray</text></g><path d="M 829.87 230 L 644.17 95.04" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 638.5 90.93 L 646.22 92.21 L 642.11 97.87 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 800 256 L 800 230 L 1190 230 L 1190 256" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 800 256 L 800 470 L 1190 470 L 1190 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 800 256 L 1190 256" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="994.5" y="247.5">KMeans</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-804-261-382-64-0)" font-size="12px"><text x="805.5" y="273.5">- k: int</text><text x="805.5" y="287.5">- max_iter: int</text><text x="805.5" y="301.5">- max_init: int</text></g><path d="M 800 324 L 1190 324" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-804-333-382-142-0)" font-size="12px"><text x="805.5" y="345.5">- init_centroids(x: ndarray): ndarray</text><text x="805.5" y="359.5">- find_closest_centroids(x: ndarray, centroids: ndarray): (ndarray, float)</text><text x="805.5" y="373.5">- compute_centroids(x: ndarray, idx: ndarray): ndarray</text><text x="805.5" y="387.5">- single_fit(x: ndarray): (ndarray, ndarray, float)</text><text x="805.5" y="401.5">+ fit(x: ndarray): None</text><text x="805.5" y="415.5">+predict(x: ndarray): ndarray</text></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>